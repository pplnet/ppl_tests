*Ignore=V7
test("recorrer col", ->{
    &lista := $[]
    RecorrerColumnas 1,3
      &lista.Add(colciclo)
    Proximo
    assertEq(1, &lista.ItemAt(0))
    assertEq(2, &lista.ItemAt(1))
    assertEq(3, &lista.ItemAt(2))
    
    &lista2 := $[]
    RecorrerCol 1,3
      &lista2.Add(colciclo)
    Proximo
    assertEq(1, &lista2.ItemAt(0))
    assertEq(2, &lista2.ItemAt(1))
    assertEq(3, &lista2.ItemAt(2))
    
    &lista3 := $[]
    &fin := 3
    RecorrerCol 1, &fin
      &lista3.Add(colciclo)
    Proximo
    assertEq(1, &lista3.ItemAt(0))
    assertEq(2, &lista3.ItemAt(1))
    assertEq(3, &lista3.ItemAt(2))
    
    &lista4 := $[]
    RecorrerCol 1, &fin+1
      &lista4.Add(colciclo)
    Proximo
    assertEq(1, &lista4.ItemAt(0))
    assertEq(2, &lista4.ItemAt(1))
    assertEq(3, &lista4.ItemAt(2))
    assertEq(4, &lista4.ItemAt(3))
    
    &lista5 := $[]
    &fin := '3'
    RecorrerCol 1, Num(&fin)
      &lista5.Add(colciclo)
    Proximo
    assertEq(1, &lista5.ItemAt(0))
    assertEq(2, &lista5.ItemAt(1))
    assertEq(3, &lista5.ItemAt(2))
})

#ifdef V7
test("recorrer col continue", ->{
    &lista6 := $[]
    RecorrerColumnas 1,3
      &lista6.Add(colciclo)
      if colciclo = 2
         continue
      endif
    Proximo
    assertEq(1, &lista6.ItemAt(0))
    assertEq(NULL, &lista6.ItemAt(1))
    assertEq(3, &lista6.ItemAt(2))
    
    &lista7 := $[]
    RecorrerCol 1,3
      &lista7.Add(colciclo)
      if colciclo = 2
         continue
      endif
    Proximo
    assertEq(1, &lista7.ItemAt(0))
    assertEq(NULL, &lista7.ItemAt(1))
    assertEq(3, &lista7.ItemAt(2))
})
#endif

test("recorrer col break", ->{
    &lista8 := $[]
    RecorrerColumnas 1,3
      &lista8.Add(colciclo)
      Break
    Proximo
    assertEq(1, &lista8.ItemAt(0))
    assertEq(NULL, &lista8.ItemAt(1))
    assertEq(NULL, &lista8.ItemAt(2))
    
    &lista9 := $[]
    RecorrerCol 1,3
      &lista9.Add(colciclo)
      Break
    Proximo
    assertEq(1, &lista9.ItemAt(0))
    assertEq(NULL, &lista9.ItemAt(1))
    assertEq(NULL, &lista9.ItemAt(2))
})
