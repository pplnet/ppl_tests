** Tests para verificar concatenaciones

&string1 := 'HOLA'
&string2 := 'CHAU'
&string3 := ' CHAU'
&ErrMsgText := 'Se esperaba un texto.'

test("concatenaciones", ->{
    assertEq('Hello world!', "Hello"~" world!")
    assertEq('Hello world!', 'Hello'~' world!')
    assertEq('Hello Wonderful World!', "Hello"~" Wonderful"~" World!")
    assertEq('HOLA CHAU', &string1~' '~&string2)
    assertEq('HOLA CHAU', &string1~" "~&string2)
    assertEq('HOLA CHAU', &string1~&string3)
    assertEq('HOLA CHAU', &string1~''~&string3)
    
    assertEq('FOO', 'FOO'~Null)
    assertEq('FOO', 'FOO'~DbNull)
    assertEq('FOO', Null~'FOO')
    assertEq('FOO', DbNull~'FOO')
	
	**// En V7 aun no tenemos implementado el display/format de PPLObj
#ifdef V6
    assertEq('Cotizacion: 2.00', 'Cotizacion: '~ NewPPLObj(2,NO,SI,'0.00'))
    assertEq('2.00->Cotizacion', NewPPLObj(2,NO,SI,'0.00')~'->Cotizacion')
	**// TODO: Fecha() en V7
	assertEq('Fecha: 01/01/2015', 'Fecha: '~NewFbnObj(Fecha('01/01/2015')))
#endif
    assertEq('Fecha: ', 'Fecha: '~NewFbnObj(DbNull))
    assertEq('Numero=0', 'Numero='~NewFbnObj(0))
    assertEq('Numero=1','Numero='~NewFbnObj(1))
    
	**// Estos tests son validos solo para V6 porque genera el error en ejecucion
	**// En V7 da SyntaxError
#ifdef V6
    assertError(&ErrMsgText, -> 'foo'~1)
    assertError(&ErrMsgText, -> 'foo'~1.1)
    assertError(&ErrMsgText, -> 'foo'~SI)
    assertError(&ErrMsgText, -> 1~'foo')
    assertError(&ErrMsgText, -> 1.1~'foo')
    assertError(&ErrMsgText, -> 'foo' ~ DateFromStr('01/01/2015'))
    assertError(&ErrMsgText, -> DateFromStr('01/01/2015') ~ 'foo')
    *assertError(10 ~ " Foo")
#endif
})


