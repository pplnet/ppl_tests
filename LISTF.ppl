&cero := NewPPLObj(0)
&uno := NewPPLObj(1)
&dos := NewPPLObj(2)

test("list for in", -> {
    let &lista |1,2,3|
    
    let &counter 0
    for &val in &lista
        assertEq(&lista.itemAt(&counter), &val)
        let &counter &counter + 1
    end
    assertEq(3, &counter)
})

test("list for in 2", -> {
    let &lista2 |'HOLA','QUE','TAL'|

    let &counter 0
    for &val2 in &lista2
        assertEq(&lista2.itemAt(&counter), &val2)
        let &counter &counter + 1
    end
    assertEq(3, &counter)
})

test("list for in 3", -> {
    let &lista3 |&cero,&uno,&dos|

    let &counter 0
    for &val3 in &lista3
        assertEq(&lista3.itemAt(&counter), &val3)
        let &counter &counter + 1
    end
    assertEq(3, &counter)
})
