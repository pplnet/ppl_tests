*test("list for in", -> {
*    let &lista |1,2,3|
*    let &counter 0
*    for &val in &lista
*        assertEq(&lista.itemAt(&counter), &val)
*        let &counter &counter + 1
*    end
*})

*test("list recorrer", -> {
*    let &lista |1,2,3|
*    recorrer&k 0, 2
*        assertEq(&k+1, &lista.itemAt(&k))
*    proximo
*})

&cero := NewPPLObj(0)
&uno := NewPPLObj(1)
&dos := NewPPLObj(2)

test("list InsertAt", -> {
    let &lista3 |''|
    
    &lista3.insertAt(&uno,'CHAU')
    &lista3.insertAt(&cero,'HOLA')
    
    let &string '!!!'
    &lista3.insertAt(&dos,&string)
    watch(&lista3.itemAt(&uno))
    
*    assertEq('HOLA', &lista3.itemAt(&cero))
    assertEq('CHAU', &lista3.itemAt(&uno))
*    assertEq(&string, &lista3.itemAt(&dos))
})

