&cero := NewPPLObj(0)
&uno := NewPPLObj(1)
&dos := NewPPLObj(2)

test("list for in", -> {
    &lista1  := |1,2,3|
    &lista2 := |'HOLA','QUE','TAL'|
    &lista3 := |&cero,&uno,&dos|
    
    &counter := 0
    for &val1 in &lista1
       assertEq(&lista1.itemAt(&counter), &val1)
       &counter := &counter + 1
    end
    assertEq(3, &counter)
    
    &counter := 0
    for &val2 in &lista2
       assertEq(&lista2.itemAt(&counter), &val2)
       &counter := &counter + 1
    end
    assertEq(3, &counter)
    
    &counter := 0
    for &val3 in &lista3
       assertEq(&lista3.itemAt(&counter), &val3)
       &counter := &counter + 1
    end
    assertEq(3, &counter)
})

test("list for in anidados", -> {
    &lista1  := |1,2,3|
    &lista2  := |4,5,6|
    &counter := 0
    
    for &val1 in &lista1
       assertEq(&lista1.itemAt(&counter), &val1)
       &counter := &counter + 1
       
       &counter2 := 0
       for &val2 in &lista2
          assertEq(&lista2.itemAt(&counter2), &val2)
          &counter2 := &counter2 + 1
       end 
    end
})

test("list for in break", -> {
    &lista  := |1,2,3|
    
    for &val in &lista
        &res := &val
        break
    end
    
    assertEq(&lista.itemAt(0), &res)
})

test("list for in continue", -> {
    &lista  := |1,2,3|
    &res := 0
    
    for &val in &lista
       if &val=2
          continue
       endif
       &res := &res + &val
    end
    
    assertEq(4, &res)
})
