test('if', -> { 
    If SI
        assert(SI)
    Else
        assert(NO)
    EndIf
    
    If(SI)
        assert(SI)
    Else
        assert(NO)
    EndIf
    
    If SI
       ** comment
    Else
       ** comment
    EndIf
    assertPass()
    
    #ifdef V6
    If [Not EqStr('', Val(A:2))] o [Eqstr('', Val(A:2)) y '' <> Val(C1)]
       ** comment
    Else
       ** comment
    EndIf
    #endif
    
    assertPass()
})

#ifdef V6

** TODO: Evitar usar dialogo, no hace falta...
** Testear IIF con lo minimo y necesario

DialogoVisible NO
CrearDialogo
  Radio1: 'Radio1' ;;;;;;;;;
  Radio2: 'Radio1|Opcion1|Opcion2' ;;;;;;;;;0
FinDialogo

test('iif', -> {
    assertEq('HOLA', IIF(Dialogo.Radio1 < 0,'HOLA','CHAU'))
    assertEq('CHAU', IIF(Dialogo.Radio1 = 1,'HOLA','CHAU'))
    assertEq('Opcion1', IIF(Dialogo.Radio2 = 0,'Opcion1','Opcion2'))
    assertEq('Opcion2', IIF(Dialogo.Radio2 = 1,'Opcion1','Opcion2'))
    assertEq('SI', IIF(1=1,'SI','NO'))
    assertEq('NO', IIF(1=2,'SI','NO'))
    assertEq(NULL, IIF(EqStr('1','2'),' x Pase'))
})

test('no - not en condiciones', -> {
    If No EqStr('jj','FX')
       ACN(A:1, 1)
    Else
       ACN(A:1, 2)
    EndIf
    assertEq(1, Val(A:1))
    
    If Not EqStr('jj','jj')
       ACN(A:2, 1)
    Else
       ACN(A:2, 2)
    EndIf
    assertEq(2, Val(A:2))
})

test('if then', -> {
    If 1 > 0 then
       ACN(A:1, 123)
    Else
       ACN(A:1, 456)
    EndIf
    assertEq(123, Val(A:1))
})

#endif